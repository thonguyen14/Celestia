154.12.229.177
address: celestia1d7y9ray68r94khyz389dx5jhfygpg5hrt93vcc
  name: tho248
  pubkey: '{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AqVbVActxI/XP6cFUx34HqksnluciQSFO8c27crRgOOc"}'
  type: local
VALIDATOR Wallet : celestiavaloper1d7y9ray68r94khyz389dx5jhfygpg5hrw6n4w7
**ocean odor ghost indoor permit surprise long between garage another noise category pumpkin skirt mean mountain fit bacon ordinary phone eternal agent rebuild kid
txhash: 010BAB5D1FA39075ADEC370ED5E219FA02510487C8095F4C7D03D16306665FB9
discord : tho248

161.97.149.123
address: celestia1s5cf5qeu9rx3reajvyvd2kr54hc79379j7zz6z
  name: thonguyen
  pubkey: '{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"Aq+gLTAKOZS3yF/s4dc0mLTZOTSgw2u8yyihCvJiJTBN"}'
  type: local
VALIDATOT Wallet : celestiavaloper1s5cf5qeu9rx3reajvyvd2kr54hc79379hpqmvy
**parent immune offer tray head horn news wheel embark doctor bless accuse dry deny session monitor soldier control spike labor step reunion yard ankle
txhash: D225292B73D1B3FD07DAED668D5E9B1AC1C042817B18426F7E2542C137E9F330
discord : thonguyen

#Install Validator node

0.1 Update packages if needed ( chạy nếu cần , chạy xong có thể lỗi các node khác như forta )

sudo apt update && sudo apt upgrade -y 

$ sudo apt update && sudo apt upgrade -y

1. cài đặt các phần phụ 

  sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential bsdmainutils git make ncdu -y

2. cài đặt go 

ver="1.18.2"
cd $HOME
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz"
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz"
rm "go$ver.linux-amd64.tar.gz"
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile
source ~/.bash_profile

go version


6. Download and build binaries ( tải xuống và tạo tệp nhị phân )

cd $HOME
rm -rf celestia-app
git clone https://github.com/celestiaorg/celestia-app.git
cd celestia-app
APP_VERSION=$(curl -s https://api.github.com/repos/celestiaorg/celestia-app/releases/latest | jq -r ".tag_name")
git checkout tags/$APP_VERSION -b $APP_VERSION
make install
cd $HOME

3. Save and import variables into system ( lưu và nhập các biến vào hệ thống )
 
$ CELESTIA_CHAIN="mamaki"
$ CELESTIA_NODENAME="thonguyen"
$ CELESTIA_WALLET="thonguyen"
$ echo "
export CELESTIA_CHAIN=${CELESTIA_CHAIN}
export CELESTIA_NODENAME=${CELESTIA_NODENAME}
export CELESTIA_WALLET=${CELESTIA_WALLET}
" >> $HOME/.bash_profile && source $HOME/.bash_profile


4. Init and config app

celestia-appd init $CELESTIA_NODENAME --chain-id $CELESTIA_CHAIN
celestia-appd config chain-id $CELESTIA_CHAIN
celestia-appd config keyring-backend test

5. Update genesis ( cập nhật genesis )

wget -O $HOME/.celestia-app/config/genesis.json "https://github.com/celestiaorg/networks/raw/master/mamaki/genesis.json"

# Or: cp $HOME/networks/$CHAIN_ID/genesis.json $HOME/.celestia-app/config


7. Download network tools ( tải xuống các công cụ mạng )

cd $HOME
rm -rf networks
git clone https://github.com/celestiaorg/networks.git


8. Set seeds, peers and boot nodes

BOOTSTRAP_PEERS=$(curl -sL https://raw.githubusercontent.com/celestiaorg/networks/master/mamaki/bootstrap-peers.txt | tr -d '\n')
MY_PEER=$(celestia-appd tendermint show-node-id)@$(curl -s ifconfig.me)$(grep -A 9 "\[p2p\]" ~/.celestia-app/config/config.toml | egrep -o ":[0-9]+")
PEERS=$(curl -sL https://raw.githubusercontent.com/celestiaorg/networks/master/mamaki/peers.txt | tr -d '\n' | head -c -1 | sed s/"$MY_PEER"// | sed "s/,,/,/g")
sed -i.bak -e "s/^bootstrap-peers *=.*/bootstrap-peers = \"$BOOTSTRAP_PEERS\"/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^persistent-peers *=.*/persistent-peers = \"$PEERS\"/" $HOME/.celestia-app/config/config.toml

9. Set minimum gas price ( đặt giá ga tối thiểu )

sed -i -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0utia\"/" $HOME/.celestia-app/config/app.toml

10. Use custom settings ( cài đặt tùy chỉnh )
 
use_legacy="false"
pex="true"
max_connections="90"
peer_gossip_sleep_duration="2ms"
sed -i.bak -e "s/^use-legacy *=.*/use-legacy = \"$use_legacy\"/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^pex *=.*/pex = \"$pex\"/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^max-connections *=.*/max-connections = \"$max_connections\"/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^peer-gossip-sleep-duration *=.*/peer-gossip-sleep-duration = \"$peer_gossip_sleep_duration\"/" $HOME/.celestia-app/config/config.toml

11. Enable prometheus ( bật prometheus )

sed -i -e "s/prometheus = false/prometheus = true/" $HOME/.celestia-app/config/config.toml

12. Config pruning ( cắt tỉa cấu hình )

pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="5000"
pruning_interval="10"
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.celestia-app/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.celestia-app/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.celestia-app/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.celestia-app/config/app.toml


13. Set timeouts

sed -i.bak -e "s/^timeout-commit *=.*/timeout-commit = \"25s\"/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^timeout-propose *=.*/timeout-propose = \"3s\"/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^skip-timeout-commit *=.*/skip-timeout-commit = false/" $HOME/.celestia-app/config/config.toml

14. Increse peer connections

sed -i.bak -e "s/^max-connections *=.*/max-connections = 150/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^max-num-inbound-peers *=.*/max-num-inbound-peers = 100/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^max-num-outbound-peers *=.*/max-num-outbound-peers = 50/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^max-incoming-connection-attempts *=.*/max-incoming-connection-attempts = 20/" $HOME/.celestia-app/config/config.toml

15. Set validator mode

sed -i.bak -e "s/^mode *=.*/mode = \"validator\"/" $HOME/.celestia-app/config/config.toml

16. (Không bắt buộc) Use Quick Sync by restoring data from snapshot

cd $HOME
rm -rf ~/.celestia-app/data
mkdir -p ~/.celestia-app/data
SNAP_NAME=$(curl -s https://snaps.qubelabs.io/celestia/ | egrep -o ">mamaki.*tar" | tr -d ">")
wget -O - https://snaps.qubelabs.io/celestia/${SNAP_NAME} | tar xf - -C ~/.celestia-app/data/

17. Create service

tee $HOME/celestia-appd.service > /dev/null <<EOF
[Unit]
  Description=CELESTIA MAMAKI
  After=network-online.target
[Service]
  User=$USER
  ExecStart=$(which celestia-appd) start
  Restart=on-failure
  RestartSec=10
  LimitNOFILE=65535
[Install]
  WantedBy=multi-user.target
EOF

sudo mv $HOME/celestia-appd.service /etc/systemd/system/

sudo systemctl enable celestia-appd
sudo systemctl daemon-reload
sudo systemctl restart celestia-appd && journalctl -u celestia-appd -f -o cat

#Create a Wallet

1. create an application CLI configuration file:

$ celestia-appd config keyring-backend test

2. pick whatever wallet name 

$ celestia-appd keys add thonguyen

  Lưu mnemonic

check all your wallets : $ celestia-appd keys list

3. gửi tin vào kênh faucet 

$request celestia1s5cf5qeu9rx3reajvyvd2kr54hc79379j7zz6z

kiểm tra balance : celestia-appd q bank balances celestia1s5cf5qeu9rx3reajvyvd2kr54hc79379j7zz6z

show địa chỉ ví : celestia-appd keys show YOUR_WALLET_NAME --bech=acc   example : celestia-appd keys show tho248 --bech=acc

show validarto wallet : celestia-appd keys show YOUR_WALLET_NAME --bech=val       example :celestia-appd keys show thonguyen --bech=val

    
cần recover ví chạy lệnh sau : celestia-appd keys add YOUR_WALLET_NAME --recover

delete ví chạy lệnh sau : 

muốn kiểm tra moniker name chạy lệnh sau : celestia-appd status 2>&1 | jq .NodeInfo

18..Kiểm tra node đã đồng bộ xong chưa. Nếu "catching_up” = false là sync xong

celestia-appd status 2>&1 | jq .SyncInfo

19. Delegate to a Validator 

celestia-appd tx staking delegate \
    celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u43cv6hd 1000000utia \
    --from=$VALIDATOR_WALLET --chain-id=mamaki

# Delegate to validator from a wallet
celestia-appd tx staking delegate YOUR_VALIDATOR_ADDRESS 10000000utia --from=YOUR_WALLETNAME --chain-id=mamaki --keyring-backend test --node https://rpc-mamaki.pops.one/
# Example:celestia-appd tx staking delegate celestiavaloper1s5cf5qeu9rx3reajvyvd2kr54hc79379hpqmvy 10000000utia --from=thonguyen --chain-id=mamaki --keyring-backend test --node https://rpc-mamaki.pops.one/

nếu thành công sẽ thấy đầu ra như sau : y

code: 0
codespace: ""
data: ""
gas_used: "0"
gas_wanted: "0"
height: "0"
info: ""
logs: []
raw_log: '[]'
timestamp: ""
tx: null
txhash: <tx-hash>

20. Connect Validator

celestia-appd tx staking create-validator \
--amount=9000000utia \
--pubkey=$(celestia-appd tendermint show-validator) \
--moniker=$CELESTIA_NODENAME \
--chain-id=$CELESTIA_CHAIN \
--commission-rate=0.1 \
--commission-max-rate=0.2 \
--commission-max-change-rate=0.01 \
--min-self-delegation="1" \
--from=$CELESTIA_WALLET \
--node https://rpc-mamaki.pops.one/


Ấn y --> enter , nếu thành công đầu ra sẽ như bên dưới :

code: 0
codespace: ""
data: ""
gas_used: "0"
gas_wanted: "0"
height: "0"
info: ""
logs: []
raw_log: '[]'
timestamp: ""
tx: null
txhash: <tx-hash>

kiểm tra trong đây https://celestia.explorers.guru/ HOẶC chạy lệnh : celestia-appd q staking validator <VALOPER_ADDR>
  
OK OK OK

****Download các file trong thư mục /root/.celestia-app/config/ về máy

****Reset database (Chỉ thực hiện khi cần xóa sạch DB lúc cài lại mới)

$ celestia-appd tendermint unsafe-reset-all --home $HOME/.celestia-app

************ok ok ok 

# Install Bridge node

1. Install Celestia Node

cd $HOME
rm -rf celestia-node
git clone https://github.com/celestiaorg/celestia-node.git
cd celestia-node
make install

2. Initialize bridge node

celestia bridge init --core.remote tcp://localhost:26657 --core.grpc tcp://localhost:9090

3. Create bridge service

tee /etc/systemd/system/celestia-bridge.service > /dev/null <<EOF
[Unit]
Description=celestia-bridge Cosmos daemon
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$HOME/go/bin/celestia bridge start
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF

4. Register and start bridge service

sudo systemctl daemon-reload
sudo systemctl enable celestia-bridge
sudo systemctl restart celestia-bridge

celestia-appd tx staking delegate celestiavaloper1s5cf5qeu9rx3reajvyvd2kr54hc79379hpqmvy 10000000utia --from=thonguyen --chain-id=mamaki --keyring-backend test --node https://rpc-mamaki.pops.one/
  114  celestia-appd tx staking create-validator --amount=9000000utia --pubkey=$(celestia-appd tendermint show-validator) --moniker=$CELESTIA_NODENAME --chain-id=$CELESTIA_CHAIN --commission-rate=0.1 --commission-max-rate=0.2 --commission-max-change-rate=0.01 --min-self-delegation="1" --from=$CELESTIA_WALLET --node https://rpc-mamaki.pops.one/

celestia-appd tx staking delegate celestiavaloper1d7y9ray68r94khyz389dx5jhfygpg5hrw6n4w7 10000000utia --from=tho248 --chain-id=mamaki --keyring-backend test --node https://rpc-mamaki.pops.one/
  462  celestia-appd tx staking create-validator --amount=9000000utia --pubkey=$(celestia-appd tendermint show-validator) --moniker=$CELESTIA_NODENAME --chain-id=$CELESTIA_CHAIN --commission-rate=0.1 --commission-max-rate=0.2 --commission-max-change-rate=0.01 --min-self-delegation="1" --from=$CELESTIA_WALLET --node https://rpc-mamaki.pops.one/



